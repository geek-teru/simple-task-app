name: backend-api-build-deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'target env (production / staging / development)'
        required: true
        options:
          - dev
          - stg
          - prd

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SYSTEM_NAME: task-app
      AWS_REGION: ap-northeast-1
      SERVICE_NAME: backend-api
      DOCKER_CTX: ./app/backend/
      DOCKERFILE: ./app/backend/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          ECR_REPOSITORY_NAME=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ github.event.inputs.environment }}-${{ env.SYSTEM_NAME }}-${{ env.SERVICE_NAME }} 
          echo "ECR_REPOSITORY_NAME=$ECR_REPOSITORY_NAME" >> $GITHUB_ENV

          ECS_CLUSTER_NAME=${{ github.event.inputs.environment }}-${{ env.SYSTEM_NAME }}
          echo "ECS_CLUSTER_NAME=$ECS_CLUSTER_NAME" >> $GITHUB_ENV

          ECS_SERVICE_NAME=${{ github.event.inputs.environment }}-${{ env.SYSTEM_NAME }}-${{ env.SERVICE_NAME }}
          echo "ECS_SERVICE_NAME=$ECS_SERVICE_NAME" >> $GITHUB_ENV

          SSM_PARAMETER_NAME=/${{ github.event.inputs.environment }}/ecs/${{ env.SERVICE_NAME }}/release
          echo "SSM_PARAMETER_NAME=$SSM_PARAMETER_NAME" >> $GITHUB_ENV

      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_CICD_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Image Tag
        run: |
          image_tag=$(TZ=Asia/Tokyo date +%Y%m%d-%H%M)
          echo "IMAGE_TAG=${image_tag}" >> $GITHUB_ENV

      - name: Build
        uses: ./.github/actions/build

      - name: Deploy
        uses: ./.github/actions/deploy
